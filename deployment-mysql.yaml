apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb
  labels:
    app: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
      - name: mysqldb
        image: mysql/mysql-server:latest
        #command:
          #- --default-authentication-plugin=mysql_native_password
          #- --init-file /data/application/loadDB.sql
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: appointmentsdb.databasepass
        - name: DATABASE_USER
          valueFrom: 
            secretKeyRef:
              name: db-secret
              key: appointmentsdb.databaseuser
        - name: DATABASE
          valueFrom: 
            configMapKeyRef:
              name: databaseconfigmap
              key: mysql.database            
        #resources:
          #limits:
            #memory: "128Mi"
            #cpu: "500m"
        ports:
        - containerPort: 3306
        volumeMounts:
          - name: mysqldata
            mountPath: /var/lib/mysql
          #- name: initdb
            #mountPath: /data/application/loadDB.sql
      volumes:
      - name: mysqldata
        persistentVolumeClaim:
          claimName: mysqldata
      - name: initdb
        hostPath:
          path: ./loadDB.sql:/data/application/loadDB.sql
    #- name: initdb
      #configMap:
        #name: initdb-config



#---

#apiVersion: v1
#kind: ConfigMap
#metadata:
  #name: initdb-config
#data:
  #initdb.sql: |
      #mysqlquery

---
apiVersion: v1
kind: Service
metadata:
  name: mysqldbclusterip
spec:
  type: ClusterIP
  selector:
    app: mysqldb
  ports:
  - port: 3306
    targetPort: 3306


---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysqldata
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
        storage: 10Mi

---

apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  labels:
    name: db-secret
  annotations:
    description: Template for Database Secrets for the Gateway
data:
  appointmentsdb.databaseuser: root
  appointmentsdb.databasepass: pass

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: databaseconfigmap
  annotations:
    description: Configuration Map for "db" type deployment
data:
  mysql.database: "appointmentsdb"

